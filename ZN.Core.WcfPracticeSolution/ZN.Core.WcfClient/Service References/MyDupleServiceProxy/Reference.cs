//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZN.Core.WcfClient.MyDupleServiceProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDupleServiceProxy.IMyDupleService", CallbackContract=typeof(ZN.Core.WcfClient.MyDupleServiceProxy.IMyDupleServiceCallback))]
    public interface IMyDupleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyDupleService/DoWork", ReplyAction="http://tempuri.org/IMyDupleService/DoWorkResponse")]
        void DoWork(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyDupleService/DoWork", ReplyAction="http://tempuri.org/IMyDupleService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyDupleServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMyDupleService/SayHello")]
        void SayHello(string mes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyDupleServiceChannel : ZN.Core.WcfClient.MyDupleServiceProxy.IMyDupleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyDupleServiceClient : System.ServiceModel.DuplexClientBase<ZN.Core.WcfClient.MyDupleServiceProxy.IMyDupleService>, ZN.Core.WcfClient.MyDupleServiceProxy.IMyDupleService {
        
        public MyDupleServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MyDupleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MyDupleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MyDupleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MyDupleServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void DoWork(string name) {
            base.Channel.DoWork(name);
        }
        
        public System.Threading.Tasks.Task DoWorkAsync(string name) {
            return base.Channel.DoWorkAsync(name);
        }
    }
}
